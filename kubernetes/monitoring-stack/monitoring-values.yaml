grafana:
  enabled: true
  service:
    type: ClusterIP

prometheus:
  enabled: true
  alertmanager:
    persistentVolume:
      enabled: false
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['alertname']
        group_wait: 5s
        group_interval: 5s
        repeat_interval: 30s
        receiver: 'webhook'

      receivers:
      - name: 'webhook'
        webhook_configs:
        - url: 'http://localhost:5000/webhooks/max-workers-reached?scaler=KEDA&namespace=keda&deployment=api-worker&numWorkers=5'
    
  server:
    service:
      type: ClusterIP
    persistentVolume:
      enabled: false
  extraScrapeConfigs: |
    - job_name: long-task-api-server
      metrics_path: '/metrics'
      scrape_interval: 5s
      static_configs:
        - targets: ['api-server-metrics.keda:9001']
          labels:
            application: 'api-server'
  serverFiles:
    alerting_rules.yml:
      groups:
        - name: worker_max_replicas_reached
          rules:
          - alert: worker_max_replicas_reached
            expr: count(kube_pod_info{created_by_kind="ReplicaSet", namespace="keda"}) == 8
            for: 30s
            labels:
              severity: page
            annotations:
              summary: Max replicas of worker pod have been reached. It will not scale any higher.
    
    alertmanager.yml:
      global:
        resolve_timeout: 5m
      route:
        receiver: webhook_receiver
      receivers:
        - name: webhook_receiver
          webhook_configs:
            - send_resolved: true
              url: 'http://api-server.keda:8000/docs'

loki:
  enabled: true
  image:
    tag: 2.9.3
  persistence:
    enabled: false
    # enabled: true
    # size: 1Gi

promtail:
    enabled: true
    config:
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
